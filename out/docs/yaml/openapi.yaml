openapi: 3.0.3
info:
  version: 1.0.0
  title: Wanderlust Travel API
  description: API for managing hotel listings and operator accounts.
  contact:
    name: CY Cheng
    email: cycheng@vtc.edu.hk
  license:
    name: Apache 2.0
    url: "https://www.apache.org/licenses/LICENSE-2.0.html"
servers:
  - url: "http://localhost:10888/api/v1"
    description: Local development server
tags:
  - name: Users
    description: API endpoints for user management.
  - name: Hotels
    description: Access and perform CRUD operations on hotel listings.
  - name: Auth
    description: Authentication endpoints for operators.
paths:
  /users:
    get:
      tags:
        - Users
      description: Get all users (operator only)
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
          description: Number of records to display (default 20)
        - in: query
          name: page
          schema:
            type: integer
          description: Page number to display
        - in: query
          name: fields
          schema:
            type: string
          description: Fields to display
        - in: query
          name: q
          schema:
            type: string
          description: Search criteria for username or email
      security:
        - bearerAuth: []
      responses:
        "200":
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "401":
          description: Unauthorized
        "404":
          description: Not Found
    post:
      tags:
        - Users
      description: Create a new operator
      requestBody:
        description: Operator registration data
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterRequest"
      responses:
        "201":
          description: Operator created
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  username:
                    type: string
                  role:
                    type: string
        "400":
          description: Bad request
        "403":
          description: Invalid sign-up code
  /users/login:
    post:
      tags:
        - Auth
      description: Login operator account
      requestBody:
        description: Login with username and password
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required: [username, password]
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  id:
                    type: integer
                  username:
                    type: string
                  role:
                    type: string
        "401":
          description: Invalid credentials
        "404":
          description: User not found
  /hotels:
    get:
      tags:
        - Hotels
      description: Get all hotels with optional search and filters
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
          description: Number of records to display (default 10)
        - in: query
          name: page
          schema:
            type: integer
          description: Page number to display
        - in: query
          name: search
          schema:
            type: string
          description: Search by hotel name
        - in: query
          name: location
          schema:
            type: string
          description: Filter by location
        - in: query
          name: minPrice
          schema:
            type: number
          description: Minimum price filter
        - in: query
          name: maxPrice
          schema:
            type: number
          description: Maximum price filter
      responses:
        "200":
          description: List of hotels
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Hotel"
        "404":
          description: Not Found
    post:
      tags:
        - Hotels
      description: Create a new hotel (operator only)
      security:
        - bearerAuth: []
      requestBody:
        description: Hotel data
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Hotel"
      responses:
        "201":
          description: Hotel created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Hotel"
        "400":
          description: Bad request
        "401":
          description: Unauthorized
  /hotels/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
        description: Numeric ID of the hotel
    get:
      tags:
        - Hotels
      description: Get hotel by ID
      responses:
        "200":
          description: Hotel record
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Hotel"
        "404":
          description: Hotel not found
    put:
      tags:
        - Hotels
      description: Update hotel by ID (operator only)
      security:
        - bearerAuth: []
      requestBody:
        description: Hotel data
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Hotel"
      responses:
        "200":
          description: Hotel updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Hotel"
        "401":
          description: Unauthorized
        "404":
          description: Hotel not found
    delete:
      tags:
        - Hotels
      description: Delete hotel by ID (operator only)
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Hotel deleted
        "401":
          description: Unauthorized
        "404":
          description: Hotel not found
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        email:
          type: string
        avatarurl:
          type: string
        role:
          type: string
      required: [username, email, role]
    RegisterRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        signupCode:
          type: string
        email:
          type: string
      required: [username, password, signupCode, email]
    Hotel:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        location:
          type: string
        price:
          type: number
        availability:
          type: boolean
      required: [name, location, price, availability]
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
